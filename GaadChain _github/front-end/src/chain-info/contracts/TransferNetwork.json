{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_transaction",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_type",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pincode",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_weight",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_category",
          "type": "string"
        }
      ],
      "name": "_allotCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/peerNetwork.sol",
    "4": "contracts/transferNetwork.sol"
  },
  "ast": {
    "absolutePath": "contracts/transferNetwork.sol",
    "exportedSymbols": {
      "PeerNetwork": [
        344
      ],
      "TransferNetwork": [
        266
      ]
    },
    "id": 267,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 215,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "contracts/peerNetwork.sol",
        "file": "./peerNetwork.sol",
        "id": 216,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 267,
        "sourceUnit": 345,
        "src": "25:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 217,
              "name": "PeerNetwork",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 344,
              "src": "82:11:4"
            },
            "id": 218,
            "nodeType": "InheritanceSpecifier",
            "src": "82:11:4"
          }
        ],
        "canonicalName": "TransferNetwork",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 266,
        "linearizedBaseContracts": [
          266,
          344
        ],
        "name": "TransferNetwork",
        "nameLocation": "63:15:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TransferNetwork.Transfer",
            "id": 223,
            "members": [
              {
                "constant": false,
                "id": 220,
                "mutability": "mutable",
                "name": "peerAddress",
                "nameLocation": "134:11:4",
                "nodeType": "VariableDeclaration",
                "scope": 223,
                "src": "126:19:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 219,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "126:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 222,
                "mutability": "mutable",
                "name": "transfercode",
                "nameLocation": "162:12:4",
                "nodeType": "VariableDeclaration",
                "scope": 223,
                "src": "155:19:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 221,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "155:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Transfer",
            "nameLocation": "107:8:4",
            "nodeType": "StructDefinition",
            "scope": 266,
            "src": "100:81:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 227,
            "mutability": "mutable",
            "name": "transfers",
            "nameLocation": "207:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 266,
            "src": "187:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Transfer_$223_storage_$dyn_storage",
              "typeString": "struct TransferNetwork.Transfer[]"
            },
            "typeName": {
              "baseType": {
                "id": 225,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 224,
                  "name": "Transfer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 223,
                  "src": "187:8:4"
                },
                "referencedDeclaration": 223,
                "src": "187:8:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Transfer_$223_storage_ptr",
                  "typeString": "struct TransferNetwork.Transfer"
                }
              },
              "id": 226,
              "nodeType": "ArrayTypeName",
              "src": "187:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Transfer_$223_storage_$dyn_storage_ptr",
                "typeString": "struct TransferNetwork.Transfer[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "438:378:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 248,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "502:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "502:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 254,
                                    "name": "_transaction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 229,
                                    "src": "600:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 255,
                                    "name": "_type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 231,
                                    "src": "638:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 256,
                                    "name": "_pincode",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 233,
                                    "src": "669:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 257,
                                    "name": "_weight",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 235,
                                    "src": "703:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 258,
                                    "name": "_category",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 237,
                                    "src": "736:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 252,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "558:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "558:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "558:209:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "530:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 250,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "530:6:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "530:255:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 247,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "476:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Transfer_$223_storage_ptr_$",
                            "typeString": "type(struct TransferNetwork.Transfer storage pointer)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "476:323:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Transfer_$223_memory_ptr",
                          "typeString": "struct TransferNetwork.Transfer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Transfer_$223_memory_ptr",
                          "typeString": "struct TransferNetwork.Transfer memory"
                        }
                      ],
                      "expression": {
                        "id": 244,
                        "name": "transfers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "448:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Transfer_$223_storage_$dyn_storage",
                          "typeString": "struct TransferNetwork.Transfer storage ref[] storage ref"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "448:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Transfer_$223_storage_$dyn_storage_ptr_$_t_struct$_Transfer_$223_storage_$returns$__$bound_to$_t_array$_t_struct$_Transfer_$223_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct TransferNetwork.Transfer storage ref[] storage pointer,struct TransferNetwork.Transfer storage ref)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "448:361:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "448:361:4"
                }
              ]
            },
            "functionSelector": "9fdb742c",
            "id": 265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 240,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "426:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "426:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 242,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 239,
                  "name": "onlyPeer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 343,
                  "src": "417:8:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "417:20:4"
              }
            ],
            "name": "_allotCode",
            "nameLocation": "232:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "_transaction",
                  "nameLocation": "266:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "252:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "252:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "302:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "288:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "_pincode",
                  "nameLocation": "331:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "317:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_weight",
                  "nameLocation": "363:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "349:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_category",
                  "nameLocation": "394:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "380:23:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "242:167:4"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:4"
            },
            "scope": 266,
            "src": "223:593:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 267,
        "src": "54:764:4",
        "usedErrors": []
      }
    ],
    "src": "0:819:4"
  },
  "bytecode": "608060405234801561001057600080fd5b50610490806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639fdb742c14610030575b600080fd5b61004361003e366004610298565b610045565b005b3361004f816100ff565b61005857600080fd5b60016040518060400160405280336001600160a01b03168152602001888888888860405160200161008d9594939291906103a5565b60408051808303601f1901815291905290528154600180820184556000938452602093849020835160029093020180546001600160a01b0319166001600160a01b03909316929092178255828401518051939492936100f49392850192919091019061015c565b505050505050505050565b600080805b6000548110156101555760008181548110610121576101216103e0565b6000918252602090912001546001600160a01b038581169116141561014557600191505b61014e816103f6565b9050610104565b5092915050565b8280546101689061041f565b90600052602060002090601f01602090048101928261018a57600085556101d0565b82601f106101a357805160ff19168380011785556101d0565b828001600101855582156101d0579182015b828111156101d05782518255916020019190600101906101b5565b506101dc9291506101e0565b5090565b5b808211156101dc57600081556001016101e1565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261021c57600080fd5b813567ffffffffffffffff80821115610237576102376101f5565b604051601f8301601f19908116603f0116810190828211818310171561025f5761025f6101f5565b8160405283815286602085880101111561027857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156102b057600080fd5b853567ffffffffffffffff808211156102c857600080fd5b6102d489838a0161020b565b965060208801359150808211156102ea57600080fd5b6102f689838a0161020b565b9550604088013591508082111561030c57600080fd5b61031889838a0161020b565b9450606088013591508082111561032e57600080fd5b61033a89838a0161020b565b9350608088013591508082111561035057600080fd5b5061035d8882890161020b565b9150509295509295909350565b6000815160005b8181101561038b5760208185018101518683015201610371565b8181111561039a576000828601525b509290920192915050565b60006103d56103cf6103c96103c36103bd868c61036a565b8a61036a565b8861036a565b8661036a565b8461036a565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561041857634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061043357607f821691505b6020821081141561045457634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f682f3ecc201c56a5743e57e5b4642dd837e63b691b0d54a7ad533bc28223ad764736f6c634300080b0033",
  "bytecodeSha1": "b3a9841986fa198760bb14bb1f62ebec91bdb2c1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "TransferNetwork",
  "coverageMap": {
    "branches": {
      "3": {
        "PeerNetwork._isPeer": {
          "5": [
            236,
            260,
            false
          ]
        },
        "TransferNetwork._allotCode": {
          "4": [
            406,
            427,
            true
          ]
        }
      },
      "4": {}
    },
    "statements": {
      "3": {
        "PeerNetwork._isPeer": {
          "1": [
            279,
            290
          ],
          "2": [
            215,
            218
          ],
          "3": [
            324,
            335
          ]
        }
      },
      "4": {
        "TransferNetwork._allotCode": {
          "0": [
            448,
            809
          ]
        }
      }
    }
  },
  "dependencies": [
    "PeerNetwork"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80639fdb742c14610030575b600080fd5b61004361003e366004610298565b610045565b005b3361004f816100ff565b61005857600080fd5b60016040518060400160405280336001600160a01b03168152602001888888888860405160200161008d9594939291906103a5565b60408051808303601f1901815291905290528154600180820184556000938452602093849020835160029093020180546001600160a01b0319166001600160a01b03909316929092178255828401518051939492936100f49392850192919091019061015c565b505050505050505050565b600080805b6000548110156101555760008181548110610121576101216103e0565b6000918252602090912001546001600160a01b038581169116141561014557600191505b61014e816103f6565b9050610104565b5092915050565b8280546101689061041f565b90600052602060002090601f01602090048101928261018a57600085556101d0565b82601f106101a357805160ff19168380011785556101d0565b828001600101855582156101d0579182015b828111156101d05782518255916020019190600101906101b5565b506101dc9291506101e0565b5090565b5b808211156101dc57600081556001016101e1565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261021c57600080fd5b813567ffffffffffffffff80821115610237576102376101f5565b604051601f8301601f19908116603f0116810190828211818310171561025f5761025f6101f5565b8160405283815286602085880101111561027857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156102b057600080fd5b853567ffffffffffffffff808211156102c857600080fd5b6102d489838a0161020b565b965060208801359150808211156102ea57600080fd5b6102f689838a0161020b565b9550604088013591508082111561030c57600080fd5b61031889838a0161020b565b9450606088013591508082111561032e57600080fd5b61033a89838a0161020b565b9350608088013591508082111561035057600080fd5b5061035d8882890161020b565b9150509295509295909350565b6000815160005b8181101561038b5760208185018101518683015201610371565b8181111561039a576000828601525b509290920192915050565b60006103d56103cf6103c96103c36103bd868c61036a565b8a61036a565b8861036a565b8661036a565b8461036a565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561041857634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061043357607f821691505b6020821081141561045457634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f682f3ecc201c56a5743e57e5b4642dd837e63b691b0d54a7ad533bc28223ad764736f6c634300080b0033",
  "deployedSourceMap": "54:764:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:593;;;;;;:::i;:::-;;:::i;:::-;;;426:10;406:21:3;414:12;406:7;:21::i;:::-;398:30;;;;;;448:9:4::1;476:323;;;;;;;;502:10;-1:-1:-1::0;;;;;476:323:4::1;;;;;600:12;638:5;669:8;703:7;736:9;558:209;;;;;;;;;;;;:::i;:::-;;::::0;;;;::::1;-1:-1:-1::0;;558:209:4;;;;;;476:323;;448:361;;::::1;::::0;;::::1;::::0;;-1:-1:-1;448:361:4;;;558:209:::1;448:361:::0;;;;;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;;;;;;448:361:4::1;-1:-1:-1::0;;;;;448:361:4;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;:::i;:::-;;;;223:593:::0;;;;;;:::o;83:259:3:-;143:4;;;187:128;202:5;:12;200:14;;187:128;;;252:5;258:1;252:8;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;236:24:3;;;252:8;;236:24;233:72;;;286:4;279:11;;233:72;215:3;;;:::i;:::-;;;187:128;;;-1:-1:-1;331:4:3;83:259;-1:-1:-1;;83:259:3:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:5;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:1145::-;1015:6;1023;1031;1039;1047;1100:3;1088:9;1079:7;1075:23;1071:33;1068:53;;;1117:1;1114;1107:12;1068:53;1157:9;1144:23;1186:18;1227:2;1219:6;1216:14;1213:34;;;1243:1;1240;1233:12;1213:34;1266:50;1308:7;1299:6;1288:9;1284:22;1266:50;:::i;:::-;1256:60;;1369:2;1358:9;1354:18;1341:32;1325:48;;1398:2;1388:8;1385:16;1382:36;;;1414:1;1411;1404:12;1382:36;1437:52;1481:7;1470:8;1459:9;1455:24;1437:52;:::i;:::-;1427:62;;1542:2;1531:9;1527:18;1514:32;1498:48;;1571:2;1561:8;1558:16;1555:36;;;1587:1;1584;1577:12;1555:36;1610:52;1654:7;1643:8;1632:9;1628:24;1610:52;:::i;:::-;1600:62;;1715:2;1704:9;1700:18;1687:32;1671:48;;1744:2;1734:8;1731:16;1728:36;;;1760:1;1757;1750:12;1728:36;1783:52;1827:7;1816:8;1805:9;1801:24;1783:52;:::i;:::-;1773:62;;1888:3;1877:9;1873:19;1860:33;1844:49;;1918:2;1908:8;1905:16;1902:36;;;1934:1;1931;1924:12;1902:36;;1957:52;2001:7;1990:8;1979:9;1975:24;1957:52;:::i;:::-;1947:62;;;870:1145;;;;;;;;:::o;2020:337::-;2062:3;2100:5;2094:12;2124:1;2134:128;2148:6;2145:1;2142:13;2134:128;;;2245:4;2230:13;;;2226:24;;2220:31;2207:11;;;2200:52;2163:12;2134:128;;;2280:6;2277:1;2274:13;2271:48;;;2315:1;2306:6;2301:3;2297:16;2290:27;2271:48;-1:-1:-1;2335:16:5;;;;;2020:337;-1:-1:-1;;2020:337:5:o;2362:492::-;2685:3;2710:138;2736:111;2762:84;2788:57;2814:30;2840:3;2832:6;2814:30;:::i;:::-;2806:6;2788:57;:::i;:::-;2780:6;2762:84;:::i;:::-;2754:6;2736:111;:::i;:::-;2728:6;2710:138;:::i;:::-;2703:145;2362:492;-1:-1:-1;;;;;;;2362:492:5:o;2859:127::-;2920:10;2915:3;2911:20;2908:1;2901:31;2951:4;2948:1;2941:15;2975:4;2972:1;2965:15;2991:232;3030:3;-1:-1:-1;;3051:17:5;;3048:140;;;3110:10;3105:3;3101:20;3098:1;3091:31;3145:4;3142:1;3135:15;3173:4;3170:1;3163:15;3048:140;-1:-1:-1;3215:1:5;3204:13;;2991:232::o;3228:380::-;3307:1;3303:12;;;;3350;;;3371:61;;3425:4;3417:6;3413:17;3403:27;;3371:61;3478:2;3470:6;3467:14;3447:18;3444:38;3441:161;;;3524:10;3519:3;3515:20;3512:1;3505:31;3559:4;3556:1;3549:15;3587:4;3584:1;3577:15;3441:161;;3228:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    54,
    818
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FDB742C EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x298 JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH2 0x4F DUP2 PUSH2 0xFF JUMP JUMPDEST PUSH2 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE DUP3 DUP5 ADD MLOAD DUP1 MLOAD SWAP4 SWAP5 SWAP3 SWAP4 PUSH2 0xF4 SWAP4 SWAP3 DUP6 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x15C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x121 JUMPI PUSH2 0x121 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x145 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH2 0x14E DUP2 PUSH2 0x3F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x104 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x168 SWAP1 PUSH2 0x41F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x18A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1A3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1B5 JUMP JUMPDEST POP PUSH2 0x1DC SWAP3 SWAP2 POP PUSH2 0x1E0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x237 JUMPI PUSH2 0x237 PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x25F JUMPI PUSH2 0x25F PUSH2 0x1F5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D4 DUP10 DUP4 DUP11 ADD PUSH2 0x20B JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F6 DUP10 DUP4 DUP11 ADD PUSH2 0x20B JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x318 DUP10 DUP4 DUP11 ADD PUSH2 0x20B JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33A DUP10 DUP4 DUP11 ADD PUSH2 0x20B JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D DUP9 DUP3 DUP10 ADD PUSH2 0x20B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD MSTORE ADD PUSH2 0x371 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP3 DUP7 ADD MSTORE JUMPDEST POP SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 PUSH2 0x3CF PUSH2 0x3C9 PUSH2 0x3C3 PUSH2 0x3BD DUP7 DUP13 PUSH2 0x36A JUMP JUMPDEST DUP11 PUSH2 0x36A JUMP JUMPDEST DUP9 PUSH2 0x36A JUMP JUMPDEST DUP7 PUSH2 0x36A JUMP JUMPDEST DUP5 PUSH2 0x36A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x418 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x433 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x454 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 DUP3 RETURN 0xEC 0xC2 ADD 0xC5 PUSH11 0x5743E57E5B4642DD837E63 0xB6 SWAP2 0xB0 0xD5 0x4A PUSH27 0xD533BC28223AD764736F6C634300080B0033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        54,
        818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9FDB742C"
    },
    "38": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "EQ",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "DUP1",
      "path": "4"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        54,
        818
      ],
      "op": "REVERT",
      "path": "4"
    },
    "48": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "49": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x43"
    },
    "52": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E"
    },
    "55": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "56": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "58": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x298"
    },
    "61": {
      "fn": "TransferNetwork._allotCode",
      "jump": "i",
      "offset": [
        223,
        816
      ],
      "op": "JUMP",
      "path": "4"
    },
    "62": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "63": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45"
    },
    "66": {
      "fn": "TransferNetwork._allotCode",
      "jump": "i",
      "offset": [
        223,
        816
      ],
      "op": "JUMP",
      "path": "4"
    },
    "67": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "68": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "STOP",
      "path": "4"
    },
    "69": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "70": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        426,
        436
      ],
      "op": "CALLER",
      "path": "4"
    },
    "71": {
      "offset": [
        406,
        427
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F"
    },
    "74": {
      "offset": [
        414,
        426
      ],
      "op": "DUP2",
      "path": "3"
    },
    "75": {
      "offset": [
        406,
        413
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF"
    },
    "78": {
      "jump": "i",
      "offset": [
        406,
        427
      ],
      "op": "JUMP",
      "path": "3"
    },
    "79": {
      "branch": 4,
      "fn": "TransferNetwork._allotCode",
      "offset": [
        406,
        427
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "80": {
      "offset": [
        398,
        428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58"
    },
    "83": {
      "branch": 4,
      "offset": [
        398,
        428
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "84": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        398,
        428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "86": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        398,
        428
      ],
      "op": "DUP1",
      "path": "3"
    },
    "87": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        398,
        428
      ],
      "op": "REVERT",
      "path": "3"
    },
    "88": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        398,
        428
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "89": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        457
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x1"
    },
    "91": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "93": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "94": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "DUP1",
      "path": "4"
    },
    "95": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "97": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "ADD",
      "path": "4"
    },
    "98": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "100": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "101": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "DUP1",
      "path": "4"
    },
    "102": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        502,
        512
      ],
      "op": "CALLER",
      "path": "4"
    },
    "103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "109": {
      "op": "SHL"
    },
    "110": {
      "op": "SUB"
    },
    "111": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "AND",
      "path": "4"
    },
    "112": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "DUP2",
      "path": "4"
    },
    "113": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "114": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "116": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "ADD",
      "path": "4"
    },
    "117": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        600,
        612
      ],
      "op": "DUP9",
      "path": "4"
    },
    "118": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        638,
        643
      ],
      "op": "DUP9",
      "path": "4"
    },
    "119": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        669,
        677
      ],
      "op": "DUP9",
      "path": "4"
    },
    "120": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        703,
        710
      ],
      "op": "DUP9",
      "path": "4"
    },
    "121": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        736,
        745
      ],
      "op": "DUP9",
      "path": "4"
    },
    "122": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "124": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "125": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "127": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "ADD",
      "path": "4"
    },
    "128": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8D"
    },
    "131": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "132": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "133": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "134": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "135": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "136": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "137": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A5"
    },
    "140": {
      "fn": "TransferNetwork._allotCode",
      "jump": "i",
      "offset": [
        558,
        767
      ],
      "op": "JUMP",
      "path": "4"
    },
    "141": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "142": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "144": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "DUP1",
      "path": "4"
    },
    "145": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "146": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "DUP1",
      "path": "4"
    },
    "147": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "DUP4",
      "path": "4"
    },
    "148": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SUB",
      "path": "4"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "151": {
      "op": "NOT"
    },
    "152": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "ADD",
      "path": "4"
    },
    "153": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "DUP2",
      "path": "4"
    },
    "154": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "155": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "156": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "157": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "158": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "159": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        476,
        799
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "160": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP2",
      "path": "4"
    },
    "161": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "162": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "164": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP1",
      "path": "4"
    },
    "165": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP3",
      "path": "4"
    },
    "166": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "ADD",
      "path": "4"
    },
    "167": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP5",
      "path": "4"
    },
    "168": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "171": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "172": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP5",
      "path": "4"
    },
    "173": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "174": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        558,
        767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "176": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "177": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP5",
      "path": "4"
    },
    "178": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "179": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "180": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP4",
      "path": "4"
    },
    "181": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "182": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "184": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "185": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "186": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "MUL",
      "path": "4"
    },
    "187": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "ADD",
      "path": "4"
    },
    "188": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP1",
      "path": "4"
    },
    "189": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "196": {
      "op": "SHL"
    },
    "197": {
      "op": "SUB"
    },
    "198": {
      "op": "NOT"
    },
    "199": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "AND",
      "path": "4"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "206": {
      "op": "SHL"
    },
    "207": {
      "op": "SUB"
    },
    "208": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "209": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "210": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "AND",
      "path": "4"
    },
    "211": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "212": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "213": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "214": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "OR",
      "path": "4"
    },
    "215": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP3",
      "path": "4"
    },
    "216": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "217": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP3",
      "path": "4"
    },
    "218": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP5",
      "path": "4"
    },
    "219": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "ADD",
      "path": "4"
    },
    "220": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "221": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP1",
      "path": "4"
    },
    "222": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "223": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "224": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "225": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "226": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "227": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF4"
    },
    "230": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "231": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "232": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "DUP6",
      "path": "4"
    },
    "233": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "ADD",
      "path": "4"
    },
    "234": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "235": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "236": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "237": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "238": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "ADD",
      "path": "4"
    },
    "239": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "240": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15C"
    },
    "243": {
      "fn": "TransferNetwork._allotCode",
      "jump": "i",
      "offset": [
        448,
        809
      ],
      "op": "JUMP",
      "path": "4"
    },
    "244": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "245": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "POP",
      "path": "4"
    },
    "246": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "POP",
      "path": "4"
    },
    "247": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        448,
        809
      ],
      "op": "POP",
      "path": "4"
    },
    "248": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "POP",
      "path": "4"
    },
    "249": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "POP",
      "path": "4"
    },
    "250": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "POP",
      "path": "4"
    },
    "251": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "POP",
      "path": "4"
    },
    "252": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "POP",
      "path": "4"
    },
    "253": {
      "fn": "TransferNetwork._allotCode",
      "offset": [
        223,
        816
      ],
      "op": "POP",
      "path": "4"
    },
    "254": {
      "fn": "TransferNetwork._allotCode",
      "jump": "o",
      "offset": [
        223,
        816
      ],
      "op": "JUMP",
      "path": "4"
    },
    "255": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        83,
        342
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "256": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        143,
        147
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "258": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        143,
        147
      ],
      "op": "DUP1",
      "path": "3"
    },
    "259": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        143,
        147
      ],
      "op": "DUP1",
      "path": "3"
    },
    "260": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        187,
        315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        202,
        207
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "263": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        202,
        214
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "264": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        200,
        214
      ],
      "op": "DUP2",
      "path": "3"
    },
    "265": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        200,
        214
      ],
      "op": "LT",
      "path": "3"
    },
    "266": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        187,
        315
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "267": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        187,
        315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x155"
    },
    "270": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        187,
        315
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "271": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        257
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "273": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        258,
        259
      ],
      "op": "DUP2",
      "path": "3"
    },
    "274": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "275": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "276": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "277": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "LT",
      "path": "3"
    },
    "278": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121"
    },
    "281": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "282": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121"
    },
    "285": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E0"
    },
    "288": {
      "fn": "PeerNetwork._isPeer",
      "jump": "i",
      "offset": [
        252,
        260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "289": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "290": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "292": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "293": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "DUP3",
      "path": "3"
    },
    "294": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "295": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "297": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "298": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "299": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "300": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "ADD",
      "path": "3"
    },
    "301": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "308": {
      "op": "SHL"
    },
    "309": {
      "op": "SUB"
    },
    "310": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        236,
        260
      ],
      "op": "DUP6",
      "path": "3"
    },
    "311": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        236,
        260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "312": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        236,
        260
      ],
      "op": "AND",
      "path": "3"
    },
    "313": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "314": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        252,
        260
      ],
      "op": "AND",
      "path": "3"
    },
    "315": {
      "branch": 5,
      "fn": "PeerNetwork._isPeer",
      "offset": [
        236,
        260
      ],
      "op": "EQ",
      "path": "3"
    },
    "316": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        233,
        305
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "317": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        233,
        305
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x145"
    },
    "320": {
      "branch": 5,
      "fn": "PeerNetwork._isPeer",
      "offset": [
        233,
        305
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "321": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        286,
        290
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x1"
    },
    "323": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        279,
        290
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "324": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        279,
        290
      ],
      "op": "POP",
      "path": "3"
    },
    "325": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        233,
        305
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "326": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        215,
        218
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 2,
      "value": "0x14E"
    },
    "329": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        215,
        218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "330": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        215,
        218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F6"
    },
    "333": {
      "fn": "PeerNetwork._isPeer",
      "jump": "i",
      "offset": [
        215,
        218
      ],
      "op": "JUMP",
      "path": "3"
    },
    "334": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        215,
        218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "335": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        215,
        218
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "336": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        215,
        218
      ],
      "op": "POP",
      "path": "3"
    },
    "337": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        187,
        315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "340": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        187,
        315
      ],
      "op": "JUMP",
      "path": "3"
    },
    "341": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        187,
        315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        331,
        335
      ],
      "op": "SWAP3",
      "path": "3",
      "statement": 3
    },
    "344": {
      "fn": "PeerNetwork._isPeer",
      "offset": [
        83,
        342
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "345": {
      "op": "POP"
    },
    "346": {
      "op": "POP"
    },
    "347": {
      "fn": "PeerNetwork._isPeer",
      "jump": "o",
      "offset": [
        83,
        342
      ],
      "op": "JUMP",
      "path": "3"
    },
    "348": {
      "op": "JUMPDEST"
    },
    "349": {
      "op": "DUP3"
    },
    "350": {
      "op": "DUP1"
    },
    "351": {
      "op": "SLOAD"
    },
    "352": {
      "op": "PUSH2",
      "value": "0x168"
    },
    "355": {
      "op": "SWAP1"
    },
    "356": {
      "op": "PUSH2",
      "value": "0x41F"
    },
    "359": {
      "jump": "i",
      "op": "JUMP"
    },
    "360": {
      "op": "JUMPDEST"
    },
    "361": {
      "op": "SWAP1"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "364": {
      "op": "MSTORE"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "369": {
      "op": "KECCAK256"
    },
    "370": {
      "op": "SWAP1"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "373": {
      "op": "ADD"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "376": {
      "op": "SWAP1"
    },
    "377": {
      "op": "DIV"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "ADD"
    },
    "380": {
      "op": "SWAP3"
    },
    "381": {
      "op": "DUP3"
    },
    "382": {
      "op": "PUSH2",
      "value": "0x18A"
    },
    "385": {
      "op": "JUMPI"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "388": {
      "op": "DUP6"
    },
    "389": {
      "op": "SSTORE"
    },
    "390": {
      "op": "PUSH2",
      "value": "0x1D0"
    },
    "393": {
      "op": "JUMP"
    },
    "394": {
      "op": "JUMPDEST"
    },
    "395": {
      "op": "DUP3"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "398": {
      "op": "LT"
    },
    "399": {
      "op": "PUSH2",
      "value": "0x1A3"
    },
    "402": {
      "op": "JUMPI"
    },
    "403": {
      "op": "DUP1"
    },
    "404": {
      "op": "MLOAD"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "407": {
      "op": "NOT"
    },
    "408": {
      "op": "AND"
    },
    "409": {
      "op": "DUP4"
    },
    "410": {
      "op": "DUP1"
    },
    "411": {
      "op": "ADD"
    },
    "412": {
      "op": "OR"
    },
    "413": {
      "op": "DUP6"
    },
    "414": {
      "op": "SSTORE"
    },
    "415": {
      "op": "PUSH2",
      "value": "0x1D0"
    },
    "418": {
      "op": "JUMP"
    },
    "419": {
      "op": "JUMPDEST"
    },
    "420": {
      "op": "DUP3"
    },
    "421": {
      "op": "DUP1"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "425": {
      "op": "ADD"
    },
    "426": {
      "op": "DUP6"
    },
    "427": {
      "op": "SSTORE"
    },
    "428": {
      "op": "DUP3"
    },
    "429": {
      "op": "ISZERO"
    },
    "430": {
      "op": "PUSH2",
      "value": "0x1D0"
    },
    "433": {
      "op": "JUMPI"
    },
    "434": {
      "op": "SWAP2"
    },
    "435": {
      "op": "DUP3"
    },
    "436": {
      "op": "ADD"
    },
    "437": {
      "op": "JUMPDEST"
    },
    "438": {
      "op": "DUP3"
    },
    "439": {
      "op": "DUP2"
    },
    "440": {
      "op": "GT"
    },
    "441": {
      "op": "ISZERO"
    },
    "442": {
      "op": "PUSH2",
      "value": "0x1D0"
    },
    "445": {
      "op": "JUMPI"
    },
    "446": {
      "op": "DUP3"
    },
    "447": {
      "op": "MLOAD"
    },
    "448": {
      "op": "DUP3"
    },
    "449": {
      "op": "SSTORE"
    },
    "450": {
      "op": "SWAP2"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "453": {
      "op": "ADD"
    },
    "454": {
      "op": "SWAP2"
    },
    "455": {
      "op": "SWAP1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "op": "SWAP1"
    },
    "460": {
      "op": "PUSH2",
      "value": "0x1B5"
    },
    "463": {
      "op": "JUMP"
    },
    "464": {
      "op": "JUMPDEST"
    },
    "465": {
      "op": "POP"
    },
    "466": {
      "op": "PUSH2",
      "value": "0x1DC"
    },
    "469": {
      "op": "SWAP3"
    },
    "470": {
      "op": "SWAP2"
    },
    "471": {
      "op": "POP"
    },
    "472": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "475": {
      "jump": "i",
      "op": "JUMP"
    },
    "476": {
      "op": "JUMPDEST"
    },
    "477": {
      "op": "POP"
    },
    "478": {
      "op": "SWAP1"
    },
    "479": {
      "jump": "o",
      "op": "JUMP"
    },
    "480": {
      "op": "JUMPDEST"
    },
    "481": {
      "op": "JUMPDEST"
    },
    "482": {
      "op": "DUP1"
    },
    "483": {
      "op": "DUP3"
    },
    "484": {
      "op": "GT"
    },
    "485": {
      "op": "ISZERO"
    },
    "486": {
      "op": "PUSH2",
      "value": "0x1DC"
    },
    "489": {
      "op": "JUMPI"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "492": {
      "op": "DUP2"
    },
    "493": {
      "op": "SSTORE"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "ADD"
    },
    "497": {
      "op": "PUSH2",
      "value": "0x1E1"
    },
    "500": {
      "op": "JUMP"
    },
    "501": {
      "op": "JUMPDEST"
    },
    "502": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "507": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "509": {
      "op": "SHL"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "512": {
      "op": "MSTORE"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "522": {
      "op": "REVERT"
    },
    "523": {
      "op": "JUMPDEST"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "526": {
      "op": "DUP3"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "529": {
      "op": "DUP4"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "op": "SLT"
    },
    "532": {
      "op": "PUSH2",
      "value": "0x21C"
    },
    "535": {
      "op": "JUMPI"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "538": {
      "op": "DUP1"
    },
    "539": {
      "op": "REVERT"
    },
    "540": {
      "op": "JUMPDEST"
    },
    "541": {
      "op": "DUP2"
    },
    "542": {
      "op": "CALLDATALOAD"
    },
    "543": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "552": {
      "op": "DUP1"
    },
    "553": {
      "op": "DUP3"
    },
    "554": {
      "op": "GT"
    },
    "555": {
      "op": "ISZERO"
    },
    "556": {
      "op": "PUSH2",
      "value": "0x237"
    },
    "559": {
      "op": "JUMPI"
    },
    "560": {
      "op": "PUSH2",
      "value": "0x237"
    },
    "563": {
      "op": "PUSH2",
      "value": "0x1F5"
    },
    "566": {
      "jump": "i",
      "op": "JUMP"
    },
    "567": {
      "op": "JUMPDEST"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "570": {
      "op": "MLOAD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "573": {
      "op": "DUP4"
    },
    "574": {
      "op": "ADD"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "577": {
      "op": "NOT"
    },
    "578": {
      "op": "SWAP1"
    },
    "579": {
      "op": "DUP2"
    },
    "580": {
      "op": "AND"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "583": {
      "op": "ADD"
    },
    "584": {
      "op": "AND"
    },
    "585": {
      "op": "DUP2"
    },
    "586": {
      "op": "ADD"
    },
    "587": {
      "op": "SWAP1"
    },
    "588": {
      "op": "DUP3"
    },
    "589": {
      "op": "DUP3"
    },
    "590": {
      "op": "GT"
    },
    "591": {
      "op": "DUP2"
    },
    "592": {
      "op": "DUP4"
    },
    "593": {
      "op": "LT"
    },
    "594": {
      "op": "OR"
    },
    "595": {
      "op": "ISZERO"
    },
    "596": {
      "op": "PUSH2",
      "value": "0x25F"
    },
    "599": {
      "op": "JUMPI"
    },
    "600": {
      "op": "PUSH2",
      "value": "0x25F"
    },
    "603": {
      "op": "PUSH2",
      "value": "0x1F5"
    },
    "606": {
      "jump": "i",
      "op": "JUMP"
    },
    "607": {
      "op": "JUMPDEST"
    },
    "608": {
      "op": "DUP2"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "DUP4"
    },
    "613": {
      "op": "DUP2"
    },
    "614": {
      "op": "MSTORE"
    },
    "615": {
      "op": "DUP7"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "618": {
      "op": "DUP6"
    },
    "619": {
      "op": "DUP9"
    },
    "620": {
      "op": "ADD"
    },
    "621": {
      "op": "ADD"
    },
    "622": {
      "op": "GT"
    },
    "623": {
      "op": "ISZERO"
    },
    "624": {
      "op": "PUSH2",
      "value": "0x278"
    },
    "627": {
      "op": "JUMPI"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "630": {
      "op": "DUP1"
    },
    "631": {
      "op": "REVERT"
    },
    "632": {
      "op": "JUMPDEST"
    },
    "633": {
      "op": "DUP4"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "636": {
      "op": "DUP8"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "640": {
      "op": "DUP4"
    },
    "641": {
      "op": "ADD"
    },
    "642": {
      "op": "CALLDATACOPY"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "647": {
      "op": "DUP6"
    },
    "648": {
      "op": "DUP4"
    },
    "649": {
      "op": "ADD"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "op": "MSTORE"
    },
    "652": {
      "op": "DUP1"
    },
    "653": {
      "op": "SWAP5"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "op": "POP"
    },
    "656": {
      "op": "POP"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "op": "SWAP3"
    },
    "660": {
      "op": "SWAP2"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "jump": "o",
      "op": "JUMP"
    },
    "664": {
      "op": "JUMPDEST"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "667": {
      "op": "DUP1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "670": {
      "op": "DUP1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "675": {
      "op": "DUP7"
    },
    "676": {
      "op": "DUP9"
    },
    "677": {
      "op": "SUB"
    },
    "678": {
      "op": "SLT"
    },
    "679": {
      "op": "ISZERO"
    },
    "680": {
      "op": "PUSH2",
      "value": "0x2B0"
    },
    "683": {
      "op": "JUMPI"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "686": {
      "op": "DUP1"
    },
    "687": {
      "op": "REVERT"
    },
    "688": {
      "op": "JUMPDEST"
    },
    "689": {
      "op": "DUP6"
    },
    "690": {
      "op": "CALLDATALOAD"
    },
    "691": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "700": {
      "op": "DUP1"
    },
    "701": {
      "op": "DUP3"
    },
    "702": {
      "op": "GT"
    },
    "703": {
      "op": "ISZERO"
    },
    "704": {
      "op": "PUSH2",
      "value": "0x2C8"
    },
    "707": {
      "op": "JUMPI"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "710": {
      "op": "DUP1"
    },
    "711": {
      "op": "REVERT"
    },
    "712": {
      "op": "JUMPDEST"
    },
    "713": {
      "op": "PUSH2",
      "value": "0x2D4"
    },
    "716": {
      "op": "DUP10"
    },
    "717": {
      "op": "DUP4"
    },
    "718": {
      "op": "DUP11"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "op": "PUSH2",
      "value": "0x20B"
    },
    "723": {
      "jump": "i",
      "op": "JUMP"
    },
    "724": {
      "op": "JUMPDEST"
    },
    "725": {
      "op": "SWAP7"
    },
    "726": {
      "op": "POP"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "729": {
      "op": "DUP9"
    },
    "730": {
      "op": "ADD"
    },
    "731": {
      "op": "CALLDATALOAD"
    },
    "732": {
      "op": "SWAP2"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "op": "DUP1"
    },
    "735": {
      "op": "DUP3"
    },
    "736": {
      "op": "GT"
    },
    "737": {
      "op": "ISZERO"
    },
    "738": {
      "op": "PUSH2",
      "value": "0x2EA"
    },
    "741": {
      "op": "JUMPI"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "744": {
      "op": "DUP1"
    },
    "745": {
      "op": "REVERT"
    },
    "746": {
      "op": "JUMPDEST"
    },
    "747": {
      "op": "PUSH2",
      "value": "0x2F6"
    },
    "750": {
      "op": "DUP10"
    },
    "751": {
      "op": "DUP4"
    },
    "752": {
      "op": "DUP11"
    },
    "753": {
      "op": "ADD"
    },
    "754": {
      "op": "PUSH2",
      "value": "0x20B"
    },
    "757": {
      "jump": "i",
      "op": "JUMP"
    },
    "758": {
      "op": "JUMPDEST"
    },
    "759": {
      "op": "SWAP6"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "763": {
      "op": "DUP9"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "op": "CALLDATALOAD"
    },
    "766": {
      "op": "SWAP2"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "op": "DUP1"
    },
    "769": {
      "op": "DUP3"
    },
    "770": {
      "op": "GT"
    },
    "771": {
      "op": "ISZERO"
    },
    "772": {
      "op": "PUSH2",
      "value": "0x30C"
    },
    "775": {
      "op": "JUMPI"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "778": {
      "op": "DUP1"
    },
    "779": {
      "op": "REVERT"
    },
    "780": {
      "op": "JUMPDEST"
    },
    "781": {
      "op": "PUSH2",
      "value": "0x318"
    },
    "784": {
      "op": "DUP10"
    },
    "785": {
      "op": "DUP4"
    },
    "786": {
      "op": "DUP11"
    },
    "787": {
      "op": "ADD"
    },
    "788": {
      "op": "PUSH2",
      "value": "0x20B"
    },
    "791": {
      "jump": "i",
      "op": "JUMP"
    },
    "792": {
      "op": "JUMPDEST"
    },
    "793": {
      "op": "SWAP5"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "797": {
      "op": "DUP9"
    },
    "798": {
      "op": "ADD"
    },
    "799": {
      "op": "CALLDATALOAD"
    },
    "800": {
      "op": "SWAP2"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "op": "DUP1"
    },
    "803": {
      "op": "DUP3"
    },
    "804": {
      "op": "GT"
    },
    "805": {
      "op": "ISZERO"
    },
    "806": {
      "op": "PUSH2",
      "value": "0x32E"
    },
    "809": {
      "op": "JUMPI"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "812": {
      "op": "DUP1"
    },
    "813": {
      "op": "REVERT"
    },
    "814": {
      "op": "JUMPDEST"
    },
    "815": {
      "op": "PUSH2",
      "value": "0x33A"
    },
    "818": {
      "op": "DUP10"
    },
    "819": {
      "op": "DUP4"
    },
    "820": {
      "op": "DUP11"
    },
    "821": {
      "op": "ADD"
    },
    "822": {
      "op": "PUSH2",
      "value": "0x20B"
    },
    "825": {
      "jump": "i",
      "op": "JUMP"
    },
    "826": {
      "op": "JUMPDEST"
    },
    "827": {
      "op": "SWAP4"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "831": {
      "op": "DUP9"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "op": "CALLDATALOAD"
    },
    "834": {
      "op": "SWAP2"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "op": "DUP1"
    },
    "837": {
      "op": "DUP3"
    },
    "838": {
      "op": "GT"
    },
    "839": {
      "op": "ISZERO"
    },
    "840": {
      "op": "PUSH2",
      "value": "0x350"
    },
    "843": {
      "op": "JUMPI"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "846": {
      "op": "DUP1"
    },
    "847": {
      "op": "REVERT"
    },
    "848": {
      "op": "JUMPDEST"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "op": "PUSH2",
      "value": "0x35D"
    },
    "853": {
      "op": "DUP9"
    },
    "854": {
      "op": "DUP3"
    },
    "855": {
      "op": "DUP10"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "op": "PUSH2",
      "value": "0x20B"
    },
    "860": {
      "jump": "i",
      "op": "JUMP"
    },
    "861": {
      "op": "JUMPDEST"
    },
    "862": {
      "op": "SWAP2"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "op": "POP"
    },
    "865": {
      "op": "SWAP3"
    },
    "866": {
      "op": "SWAP6"
    },
    "867": {
      "op": "POP"
    },
    "868": {
      "op": "SWAP3"
    },
    "869": {
      "op": "SWAP6"
    },
    "870": {
      "op": "SWAP1"
    },
    "871": {
      "op": "SWAP4"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "jump": "o",
      "op": "JUMP"
    },
    "874": {
      "op": "JUMPDEST"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "877": {
      "op": "DUP2"
    },
    "878": {
      "op": "MLOAD"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "881": {
      "op": "JUMPDEST"
    },
    "882": {
      "op": "DUP2"
    },
    "883": {
      "op": "DUP2"
    },
    "884": {
      "op": "LT"
    },
    "885": {
      "op": "ISZERO"
    },
    "886": {
      "op": "PUSH2",
      "value": "0x38B"
    },
    "889": {
      "op": "JUMPI"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "892": {
      "op": "DUP2"
    },
    "893": {
      "op": "DUP6"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "DUP2"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "op": "MLOAD"
    },
    "898": {
      "op": "DUP7"
    },
    "899": {
      "op": "DUP4"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "ADD"
    },
    "903": {
      "op": "PUSH2",
      "value": "0x371"
    },
    "906": {
      "op": "JUMP"
    },
    "907": {
      "op": "JUMPDEST"
    },
    "908": {
      "op": "DUP2"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "GT"
    },
    "911": {
      "op": "ISZERO"
    },
    "912": {
      "op": "PUSH2",
      "value": "0x39A"
    },
    "915": {
      "op": "JUMPI"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "918": {
      "op": "DUP3"
    },
    "919": {
      "op": "DUP7"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "JUMPDEST"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "op": "SWAP3"
    },
    "925": {
      "op": "SWAP1"
    },
    "926": {
      "op": "SWAP3"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "op": "SWAP3"
    },
    "929": {
      "op": "SWAP2"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "op": "POP"
    },
    "932": {
      "jump": "o",
      "op": "JUMP"
    },
    "933": {
      "op": "JUMPDEST"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x3D5"
    },
    "939": {
      "op": "PUSH2",
      "value": "0x3CF"
    },
    "942": {
      "op": "PUSH2",
      "value": "0x3C9"
    },
    "945": {
      "op": "PUSH2",
      "value": "0x3C3"
    },
    "948": {
      "op": "PUSH2",
      "value": "0x3BD"
    },
    "951": {
      "op": "DUP7"
    },
    "952": {
      "op": "DUP13"
    },
    "953": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "956": {
      "jump": "i",
      "op": "JUMP"
    },
    "957": {
      "op": "JUMPDEST"
    },
    "958": {
      "op": "DUP11"
    },
    "959": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "962": {
      "jump": "i",
      "op": "JUMP"
    },
    "963": {
      "op": "JUMPDEST"
    },
    "964": {
      "op": "DUP9"
    },
    "965": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "968": {
      "jump": "i",
      "op": "JUMP"
    },
    "969": {
      "op": "JUMPDEST"
    },
    "970": {
      "op": "DUP7"
    },
    "971": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "974": {
      "jump": "i",
      "op": "JUMP"
    },
    "975": {
      "op": "JUMPDEST"
    },
    "976": {
      "op": "DUP5"
    },
    "977": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "980": {
      "jump": "i",
      "op": "JUMP"
    },
    "981": {
      "op": "JUMPDEST"
    },
    "982": {
      "op": "SWAP8"
    },
    "983": {
      "op": "SWAP7"
    },
    "984": {
      "op": "POP"
    },
    "985": {
      "op": "POP"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "op": "POP"
    },
    "989": {
      "op": "POP"
    },
    "990": {
      "op": "POP"
    },
    "991": {
      "jump": "o",
      "op": "JUMP"
    },
    "992": {
      "op": "JUMPDEST"
    },
    "993": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1003": {
      "op": "MSTORE"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1013": {
      "op": "REVERT"
    },
    "1014": {
      "op": "JUMPDEST"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1019": {
      "op": "NOT"
    },
    "1020": {
      "op": "DUP3"
    },
    "1021": {
      "op": "EQ"
    },
    "1022": {
      "op": "ISZERO"
    },
    "1023": {
      "op": "PUSH2",
      "value": "0x418"
    },
    "1026": {
      "op": "JUMPI"
    },
    "1027": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1034": {
      "op": "SHL"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1047": {
      "op": "REVERT"
    },
    "1048": {
      "op": "JUMPDEST"
    },
    "1049": {
      "op": "POP"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "ADD"
    },
    "1053": {
      "op": "SWAP1"
    },
    "1054": {
      "jump": "o",
      "op": "JUMP"
    },
    "1055": {
      "op": "JUMPDEST"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "DUP2"
    },
    "1059": {
      "op": "DUP2"
    },
    "1060": {
      "op": "SHR"
    },
    "1061": {
      "op": "SWAP1"
    },
    "1062": {
      "op": "DUP3"
    },
    "1063": {
      "op": "AND"
    },
    "1064": {
      "op": "DUP1"
    },
    "1065": {
      "op": "PUSH2",
      "value": "0x433"
    },
    "1068": {
      "op": "JUMPI"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1071": {
      "op": "DUP3"
    },
    "1072": {
      "op": "AND"
    },
    "1073": {
      "op": "SWAP2"
    },
    "1074": {
      "op": "POP"
    },
    "1075": {
      "op": "JUMPDEST"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1078": {
      "op": "DUP3"
    },
    "1079": {
      "op": "LT"
    },
    "1080": {
      "op": "DUP2"
    },
    "1081": {
      "op": "EQ"
    },
    "1082": {
      "op": "ISZERO"
    },
    "1083": {
      "op": "PUSH2",
      "value": "0x454"
    },
    "1086": {
      "op": "JUMPI"
    },
    "1087": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1107": {
      "op": "REVERT"
    },
    "1108": {
      "op": "JUMPDEST"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "op": "SWAP2"
    },
    "1111": {
      "op": "SWAP1"
    },
    "1112": {
      "op": "POP"
    },
    "1113": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ea803b09e56a664a4fd9143c4912256ddc1f9e8b",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./peerNetwork.sol\";\n\ncontract TransferNetwork is PeerNetwork {\n    struct Transfer {\n        address peerAddress;\n        string transfercode;\n    }\n\n    Transfer[] internal transfers;\n\n    function _allotCode(\n        string memory _transaction,\n        string memory _type,\n        string memory _pincode,\n        string memory _weight,\n        string memory _category\n    ) public onlyPeer(msg.sender) {\n        transfers.push(\n            Transfer(\n                msg.sender,\n                string(\n                    abi.encodePacked(\n                        _transaction,\n                        _type,\n                        _pincode,\n                        _weight,\n                        _category\n                    )\n                )\n            )\n        );\n    }\n}\n",
  "sourceMap": "54:764:4:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/transferNetwork.sol",
  "type": "contract"
}